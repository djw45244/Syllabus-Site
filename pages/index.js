import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState, useEffect, Fragment } from "react";
import {
  EmojiHappyIcon as EmojiHappyIconSolid,
  EmojiSadIcon,
  FireIcon,
  HeartIcon,
  ThumbUpIcon,
  XIcon,
} from "@heroicons/react/solid";
import {
  FormControl,
  FormLabel,
  FormHelperText,
  Input,
  Button,
  RadioGroup,
  Heading,
  Radio,
  Text,
  Flex,
  Card,
  CardBody,
  HStack,
  Slider,
  SliderTrack,
  SliderFilledTrack,
  SliderThumb,
  SliderMark,
} from "@chakra-ui/react";

export default function Home() {
  // React Hooks
  const [data, setData] = useState({ text: "" });
  const [query, setQuery] = useState();
  const [classType, setClassType] = useState("writing intensive");
  const inputType = (e) => {setClassType(e.target.value);};
  const [lengthType, setLengthType] = useState(7);
  const [search, setSearch] = useState();
  const [isLoading, setIsLoading] = useState(false);
  const [sliderValue, setSliderValue] = useState(7);

  const labelStyles = {
    mt: '2',
    ml: '-2.5',
    fontSize: 'sm',
  }

  // Fetch data from API

    const fetchData = async () => {
        setIsLoading(true);
        const res = await fetch(`/api/openai`, {
          body: JSON.stringify({
            name: search,
            syltype: classType,
            lentype: lengthType,
          }),
          headers: {
            "Content-Type": "application/json",
          },
          method: "POST",
        });
        const data = await res.json();
        setData(data);
        setIsLoading(false);
    };


  // What we want to render
  return (
    <div>
      <Head>
        <title>Devan's Syllabus Maker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

          <main className={styles.main}>
            <Flex direction="column" align="center" justify="center">
              <div w={100}>
              <Text
                className={styles.title}
                fontSize={{ base: "40px", md: "50px", lg: "56px" }}
              >
              Devan's Syllabus Maker ðŸ“Ž
              </Text>
              <Text
                className={styles.description}
                fontSize={{ base: "20px", md: "24px", lg: "28px" }}
              >
                
              </Text>
                <FormLabel>What will be the subject of the course?</FormLabel>
                <Input
                  value={query} 
                  onChange={(event) => setSearch(event.target.value)}
                  placeholder="intro to developmental psych, afro-caribbean literature, green chemistry, etc."
                  type="text"
                  width="90vw"
                />

                <FormControl as="fieldset" m={5}>
                  <FormLabel as="legend">What will be the style of course?</FormLabel>
                  <RadioGroup name="type" defaultValue="writing intensive">
                    <Flex direction="column" spacing="24px">
                      <Radio onChange={inputType} value="writing intensive">
                        Writing Intensive
                      </Radio>
                      <Radio onChange={inputType} value="math intensive">
                        Math Intensive
                      </Radio>
                      <Radio onChange={inputType} value="collaboration intensive">
                        Collaboration Intensive
                      </Radio>
                      <Radio onChange={inputType} value="project-based">
                        Project-based
                      </Radio>
                      <Radio onChange={inputType} value="competency-based">
                        Competency-based
                      </Radio>
                    </Flex>
                  </RadioGroup>
                </FormControl>

                <FormControl as="fieldset" m={5} pt={10}>
                  <FormLabel as="legend">How many weeks will be the course?</FormLabel>
                  <Slider defaultValue={7} min={1} max={15} step={1} aria-label='slider-ex-6' onChange={(val) => setSliderValue(val) } onChangeEnd={(val) => setLengthType(val)}>

                    <SliderMark
                      value={sliderValue}
                      textAlign='center'
                      bg='blue.500'
                      color='white'
                      mt='-10'
                      ml='-8'
                      w='20'
                    >
                      {sliderValue} Weeks
                    </SliderMark>
                    <SliderTrack>
                      <SliderFilledTrack />
                    </SliderTrack>
                    <SliderThumb boxSize={5} />
                  </Slider>
                </FormControl>

                <Flex align="center" justify="center" m={4}>
                  <Button onClick={fetchData} colorScheme="gray" size="md">
                    Make Syllabus!
                  </Button>
                </Flex>
                <Card variant={'filled'} m={4} align="left" justify="left">
                  <CardBody>{isLoading ? <div>Loading ...</div> : <span> {data.text} </span>}</CardBody>
                </Card>
                
              </div>
            </Flex>
          </main>
    </div>
  );
}
